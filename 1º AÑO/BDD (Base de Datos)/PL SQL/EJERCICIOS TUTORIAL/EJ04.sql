SET SERVEROUTPUT ON
SET VERIFY OFF


-- CREAR UNA FUNCIÓN QUE DEVUELVA LA SUMA DE PAGOS QUE HA REALIZADO. PASAMOS EL CÓDIGO POR PARÁMETRO
CREATE OR REPLACE FUNCTION SUMA_PAGOS(P_COD PAGOS.CODIGOCLIENTE%TYPE)
-- Tipo de dato que nos devolverá
RETURN NUMBER
IS
    SUMA_TOTAL PAGOS.CANTIDAD%TYPE:=0;
BEGIN
    SELECT SUM(CANTIDAD) INTO SUMA_TOTAL FROM PAGOS WHERE CODIGOCLIENTE=P_COD;
    -- Dato que nos devuelve
    RETURN SUMA_TOTAL;
END;
/
-- Llamamos a la función
DECLARE
    CODIGO PAGOS.CODIGOCLIENTE%TYPE:='&codigo';
    SUMA NUMBER(10):=SUMA_PAGOS(CODIGO);
BEGIN
    DBMS_OUTPUT.PUT_LINE('SUMA TOTAL: '||SUMA);
END;
/




-- UTILIZAR UN MÉTODO O PROCEDIMIENTO QUE MUESTRE EL TOTAL EN EUROS DE UN PEDIDO. PASAMOS EL CODIGO COMO PARAMETRO
CREATE OR REPLACE PROCEDURE TOTAL_EUROS(V_COD DETALLEPEDIDOS.CODIGOPEDIDO%TYPE)
IS
    PRECIO_EUROS DETALLEPEDIDOS.PRECIOUNIDAD%TYPE:=0;
BEGIN
    SELECT SUM(PRECIOUNIDAD) INTO PRECIO_EUROS FROM DETALLEPEDIDOS
        WHERE CODIGOPEDIDO=V_COD;
    DBMS_OUTPUT.PUT_LINE('TOTAL EN EUROS: '||PRECIO_EUROS);
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Codigo no disponible');
END;
/

DECLARE
    CODIGO2 DETALLEPEDIDOS.CODIGOPEDIDO%TYPE:='&codigo2';
BEGIN
    TOTAL_EUROS(CODIGO2);
END;