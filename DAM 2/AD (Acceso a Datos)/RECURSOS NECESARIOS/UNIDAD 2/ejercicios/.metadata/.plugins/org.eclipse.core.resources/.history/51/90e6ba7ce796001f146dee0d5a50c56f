package pruebaProcedimientos;

import java.sql.*;

public class Principal {

	
	public static void main(String[] args) {
	     try {
	    	 	Connection conexion = Conexiones.getOracle("EJEMPLO25", "ejemplo25");
			//Connection conexion = Conexiones.getMysql("ejemplo25", "root","");
		
				
	       //recuperar parametro de main
		 String dep = args[0]; //departamento

	       //Construir orden de llamada
	       // CREATE OR REPLACE FUNCTION nombre_dep 
	       //        (d NUMBER, locali OUT VARCHAR2)  RETURN VARCHAR2 AS
	       // nom VARCHAR2(15);

	       String sql = "{ ? = call nombre_dep (?, ?) } "; // ORACLE

	       //Preparar la llamada
	       CallableStatement llamada = conexion.prepareCall(sql);

	       //registrar par치metro de resultado, return
	       llamada.registerOutParameter(1, Types.VARCHAR);//valor devuelto NOM

	       llamada.setInt(2,Integer.parseInt(dep));      //param de entrada

	       //Registrar par치metro de salida
	       llamada.registerOutParameter(3, Types.VARCHAR);//par치metro OUT LOCALI

	       //Ejecutar el procedimiento
	       llamada.executeUpdate(); 
	       System.out.printf("Nombre Dep: %s, Localidad: %s %n",
	                        llamada.getString(1), llamada.getString(3));
	       llamada.close();
	       conexion.close();
	     } 
	     catch (ClassNotFoundException cn) { cn.printStackTrace(); }
	     catch (SQLException e)            { e.printStackTrace(); }
	   }// fin de main

	
	
	
	
	
	public static void main2(String[] args) {

		
		try {

		 //	Connection conexion = Conexiones.getOracle("EJEMPLO25", "ejemplo25");
			Connection conexion = Conexiones.getMysql("ejemplo25", "root","");
			
			subidasal(args, conexion);
			
		}

		catch (SQLException e) {
			e.printStackTrace();
		}

	}// fin de main

	private static void subidasal(String[] args, Connection conexion) throws SQLException {
		// recuperar par치metros de main
		String dep = args[0]; // departamento
		String subida = args[1]; // subida

		// construir orden de llamada
		String sql = "{ call subida_sal (?, ?) } ";

		// Preparar la llamada
		CallableStatement llamada = conexion.prepareCall(sql);

		// Dar valor a los argumentos
		llamada.setInt(1, Integer.parseInt(dep)); // primero
		llamada.setFloat(2, Float.parseFloat(subida)); // segundo

		// Ejecutar el procedimiento
		llamada.executeUpdate();
		System.out.println("Subida realizada....");

		llamada.close();
		conexion.close();
	}

}
