CAMBIAR FONDO
ConstraintLayout nombre=findViewById(R.id.main);
l.setBackgroundColor(color);
Simplemente tenemos que coger el id del fondo, el cual suele ser de tipo Constraint Layout, y se lo cambiamos.


CREAR COLORES
1. Colores predefinidos:
	Color.RED
	Color.BLUE

2. Con el XML:
	1. Deifimos el color en el XML de "color"
	2. Utilizamos: int color=ContextCompact.getColor(this, R.color.ID_DEL_COLOR);
	3. Lo utilizamos donde ueramos: elemento.setBackgroundColor(color);


GUARDAR DATOS AL REINICIAR LA APP
Si por ejemplo, cambiamos el color de fondo y queremos que al reiniciar la app se quede guardado este cambio, utilizamos lo siguiente:
SharedPreferences	




INTENTS CON RESULT
if (result.getResultCode() == RESULT_OK) {
    // Código para procesar los datos
}
Esto sirve para verificar si la ventana a la que vamos, se ejecutó correctamente 

Intent data=result.getData();
if(data != null) {
}
Sirve para erificar si se han recibido datos de la otra pantalla o no.

ENVIAR:
Tras poner los putExtra, podemos utilizar la siguiente línea al devolver datos:
setResult(RESULT_OK, nombreIntent);
Esto lo que hace es devolver un OK a la otra actividad, para que esta entienda que se completó con éxito la función.

Ya dentro de esto, podemos poner lo que queramos. Podemos modificar campos, modificar funciones, por ejemplo la funció de un botón. Todo lo que pondrmamos aquí, cambiará en el código, da igual lo que se haya puesto antes.


TOASTS
Toast.makeText(getApplicationContext(),"No puede haber campos vacíos", Toast.LENGTH_SHORT).show();


